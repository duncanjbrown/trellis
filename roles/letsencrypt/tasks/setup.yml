- name: Create directories and set permissions
  file:
    mode: "{{ item.mode | default(omit) }}"
    path: "{{ item.path }}"
    state: directory
  with_items:
    - path: "{{ acme_tiny_data_directory }}"
    - path: "{{ acme_tiny_data_directory }}/csrs"
    - path: "{{ acme_tiny_software_directory }}"
    - path: "{{ acme_tiny_challenges_directory }}"
    - path: "{{ acme_tiny_data_directory }}"
      mode: '0700'
    - path: "{{ letsencrypt_certs_dir }}"
      mode: '0700'

- name: Clone acme-tiny repository
  git:
    dest: "{{ acme_tiny_software_directory }}"
    repo: "{{ acme_tiny_repo }}"
    version: "{{ acme_tiny_commit }}"
    accept_hostkey: yes

- name: Copy Lets Encrypt account key source file
  copy:
    src: "{{ letsencrypt_account_key_source_file }}"
    dest: "{{ letsencrypt_account_key }}"
  when: letsencrypt_account_key_source_file is defined

- name: Copy Lets Encrypt account key source contents
  copy:
    content: "{{ letsencrypt_account_key_source_content | trim }}"
    dest: "{{ letsencrypt_account_key }}"
  when: letsencrypt_account_key_source_content is defined

- name: Generate a new account key
  shell: openssl genrsa 4096 > {{ letsencrypt_account_key }}
  args:
    creates: "{{ letsencrypt_account_key }}"
  register: generate_account_key

- name: Print account public key
  command: openssl rsa -in {{ letsencrypt_account_key }} -pubout
  register: account_public_key
  when: generate_account_key | changed

- name: Please register the account public key with Lets Encrypt, using for example https://gethttpsforfree.com/
  debug:
    var: account_public_key.stdout
  when: generate_account_key | changed

- name: Generate certificate renewal script
  template:
    src: renew-certs.py
    dest: "{{ acme_tiny_data_directory }}/renew-certs.py"
    mode: 0700

- name: Download intermediate certificate
  get_url:
    url: "{{ letsencrypt_intermediate_cert_url }}"
    dest: "{{ letsencrypt_intermediate_cert_path }}"
    sha256sum: "{{ letsencrypt_intermediate_cert_sha256sum }}"

- name: Create Nginx conf for challenges location
  template:
    src: acme-challenge-location.conf.j2
    dest: "{{ nginx_path }}/acme-challenge-location.conf"
